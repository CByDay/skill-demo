spring:
  web:
    #静态资源处理
    resources:
      #启动默认静态资源处理，默认启动
      add-mappings: true
      cache:
        cachecontrol:
          #缓存响应时间，单位秒
          max-age: 3600
      chain:
        #资源配链启动缓存，默认启动
        cache: true
        #启动资源链，默认禁用
        enabled: true
        #启用压缩资源（gzip，brotil）解析，默认禁用
        compressed: true
      static-locations: classpath:/static/
#  #静态资源处理
#  resources:
#    #启动默认静态资源处理，默认启动
#    add-mappings: true
#    cache:
#      cachecontrol:
#        #缓存响应时间，单位秒
#        max-age: 3600
#    chain:
#      #资源配链启动缓存，默认启动
#      cache: true
#      #启动资源链，默认禁用
#      enabled: true
#      #启用压缩资源（gzip，brotil）解析，默认禁用
#      compressed: true
#      #启用h5应用缓存，默认禁用
#      html-application-cache: true
#    static-locations: classpath:/static/

  thymeleaf:
    cache: false
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/jk_manage?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456789
    hikari:
      # 连接池名字
      pool-name: DateHikariCP
      # 最小空闲连接出
      minimum-idle: 5
      # 空闲连接存活最大时间，默认 600000（10分钟）
      idle-timeout: 1800000
      # 最大连接数，默认10
      maximum-pool-size: 10
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，0表示永久存活，1800000（30分钟）
      max-lifetime: 1800000
      # 连接超时时间，默认30秒
      connection-timeout: 3000
      # 测试连接是否可用的查询语句
      connection-test-query: SELECT 1
      # 控制默认情况下从池获得的连接是否处于只读模式
      read-only: false


  #  本地redis
  redis:
    host: localhost
    port: 6379
    database: 0
    timeout: 10000ms
    lettuce:
      pool:
        #最大连接数 默认8
        max-active: 8
        #最大连接阻塞时间
        max-wait: 1000ms
        #最大空闲连接，默认8
        max-idle: 200
        # 最小连接
        min-idle: 5

#mybatis-plus
mybatis-plus:
#  mapper-locations: classpath*:/mapper/*.xml
  mapper-locations: "classpath*:mapper/*.xml"
  type-aliases-package: cn.example.seckilldemo
#  type-aliases-package: cn.example.seckilldemo
  configuration:
    #开启驼峰命名
    map-underscore-to-camel-case: true
    #开启sql打印到控制台
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    cn.example.sekilldemo.mapper: debug

  #RabbitMQ
  rabbitmq:
    #服务器
#    host: 192.168.3.11
#    本机
    host: 127.0.0.1
    #用户名
    username: guest
    #密码
    password: guest
    #虚拟主机
#    virtual-host: /cbyday
    #端口
    port: 5672
    listener:
      simple:
        #消费者最小数量
        concurrency: 10
        #消费者最大数量
        max-concurrency: 10
        #限制消费者每次只能处理一条消息，处理完在继续下一条消息
        prefetch: 1
        #启动是默认启动容器
        auto-startup: true
        #被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试，默认false
        enabled: true
        #重试时间，默认1000ms
        initial-interval: 1000ms
        #重试最大次数，默认3次
        max-attempts: 3
        #最大重试间隔时间
        max-interval: 10000ms
        #重试的间隔乘数，比如配2。0  第一等10s 第二次等20s 第三次等40s
        multiplier: 1
